[{"I:\\Ficheros\\REACT\\07-calendar-app\\src\\index.jsx":"1","I:\\Ficheros\\REACT\\07-calendar-app\\src\\CalendarApp.jsx":"2","I:\\Ficheros\\REACT\\07-calendar-app\\src\\components\\auth\\LoginScreen.jsx":"3","I:\\Ficheros\\REACT\\07-calendar-app\\src\\components\\calendar\\CalendarScreen.jsx":"4","I:\\Ficheros\\REACT\\07-calendar-app\\src\\routers\\AppRouter.jsx":"5","I:\\Ficheros\\REACT\\07-calendar-app\\src\\components\\ui\\Navbar.jsx":"6","I:\\Ficheros\\REACT\\07-calendar-app\\src\\helpers\\calendar-messages-es.js":"7","I:\\Ficheros\\REACT\\07-calendar-app\\src\\components\\calendar\\CalendarEvent.jsx":"8","I:\\Ficheros\\REACT\\07-calendar-app\\src\\components\\calendar\\CalendarModal.jsx":"9","I:\\Ficheros\\REACT\\07-calendar-app\\src\\store\\store.js":"10","I:\\Ficheros\\REACT\\07-calendar-app\\src\\reducers\\rootReducer.js":"11","I:\\Ficheros\\REACT\\07-calendar-app\\src\\reducers\\uiReducer.js":"12","I:\\Ficheros\\REACT\\07-calendar-app\\src\\types\\types.js":"13","I:\\Ficheros\\REACT\\07-calendar-app\\src\\actions\\uiActions.js":"14","I:\\Ficheros\\REACT\\07-calendar-app\\src\\reducers\\calendarReducer.js":"15","I:\\Ficheros\\REACT\\07-calendar-app\\src\\actions\\calendarActions.js":"16","I:\\Ficheros\\REACT\\07-calendar-app\\src\\components\\ui\\AddNewFab.jsx":"17","I:\\Ficheros\\REACT\\07-calendar-app\\src\\components\\ui\\DeleteFab.jsx":"18","I:\\Ficheros\\REACT\\07-calendar-app\\src\\reducers\\authReducer.js":"19","I:\\Ficheros\\REACT\\07-calendar-app\\src\\hooks\\useForm.js":"20","I:\\Ficheros\\REACT\\07-calendar-app\\src\\actions\\authActions.js":"21","I:\\Ficheros\\REACT\\07-calendar-app\\src\\helpers\\fetchHelper.js":"22","I:\\Ficheros\\REACT\\07-calendar-app\\src\\routers\\PrivateRoute.jsx":"23","I:\\Ficheros\\REACT\\07-calendar-app\\src\\routers\\PublicRoute.jsx":"24","I:\\Ficheros\\REACT\\07-calendar-app\\src\\helpers\\adjustEventsDates.js":"25"},{"size":205,"mtime":1610389549614,"results":"26","hashOfConfig":"27"},{"size":438,"mtime":1610459013430,"results":"28","hashOfConfig":"27"},{"size":6034,"mtime":1611251882890,"results":"29","hashOfConfig":"27"},{"size":3950,"mtime":1611049993983,"results":"30","hashOfConfig":"27"},{"size":2038,"mtime":1611243795849,"results":"31","hashOfConfig":"27"},{"size":725,"mtime":1610971360657,"results":"32","hashOfConfig":"27"},{"size":333,"mtime":1610390049822,"results":"33","hashOfConfig":"27"},{"size":318,"mtime":1610442886009,"results":"34","hashOfConfig":"27"},{"size":7942,"mtime":1611329406000,"results":"35","hashOfConfig":"27"},{"size":593,"mtime":1610459861466,"results":"36","hashOfConfig":"27"},{"size":400,"mtime":1610710039010,"results":"37","hashOfConfig":"27"},{"size":579,"mtime":1610467856239,"results":"38","hashOfConfig":"27"},{"size":980,"mtime":1611058953861,"results":"39","hashOfConfig":"27"},{"size":225,"mtime":1610465778579,"results":"40","hashOfConfig":"27"},{"size":1519,"mtime":1611059487949,"results":"41","hashOfConfig":"27"},{"size":4797,"mtime":1611059181005,"results":"42","hashOfConfig":"27"},{"size":526,"mtime":1610475894113,"results":"43","hashOfConfig":"27"},{"size":725,"mtime":1611050052645,"results":"44","hashOfConfig":"27"},{"size":667,"mtime":1611175685893,"results":"45","hashOfConfig":"27"},{"size":661,"mtime":1610711628247,"results":"46","hashOfConfig":"27"},{"size":3551,"mtime":1611147011280,"results":"47","hashOfConfig":"27"},{"size":1110,"mtime":1610983746200,"results":"48","hashOfConfig":"27"},{"size":634,"mtime":1610969268556,"results":"49","hashOfConfig":"27"},{"size":646,"mtime":1610968545273,"results":"50","hashOfConfig":"27"},{"size":274,"mtime":1610985968505,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1q7985i",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"I:\\Ficheros\\REACT\\07-calendar-app\\src\\index.jsx",[],["105","106"],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\CalendarApp.jsx",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\components\\auth\\LoginScreen.jsx",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\components\\calendar\\CalendarScreen.jsx",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\routers\\AppRouter.jsx",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\components\\ui\\Navbar.jsx",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\helpers\\calendar-messages-es.js",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\components\\calendar\\CalendarEvent.jsx",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\components\\calendar\\CalendarModal.jsx",["107"],"import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModalStoreAction } from '../../actions/uiActions';\r\nimport { eventClearActiveStoreAction, eventStartAddNewEventAction, eventStartUpdateEventAction } from '../../actions/calendarActions';\r\n\r\n\r\n// Estas variables las ponemos fuera del componente para que no se tengan que volver a calcular cuando cambie el estado\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nconst now = moment().minutes( 0 ).seconds( 0 ).add( 1, 'hour' );\r\n\r\nconst nowPlusOneHour = now.clone().add( 1, 'hour' );\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlusOneHour.toDate()\r\n};\r\n\r\n// Ponemos la condiciÃ³n para poder hacer las pruebas\r\n\r\nif( process.env.NODE_ENV !== 'test' ){\r\n\r\n    // Make sure to bind modal to your appElement\r\n\r\n    Modal.setAppElement( '#root' );\r\n\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    // const [ modalIsOpen, setModalIsOpen ] = useState( true ); // Lo vamos a manejar con Redux\r\n\r\n\r\n    // Si quiero estar pendiente de cambios de algo del State del Store usamos useSelector\r\n\r\n    const { modalIsOpen } = useSelector( state => state.ui );\r\n\r\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\r\n\r\n    const [ dateEnd, setDateEnd ] = useState( nowPlusOneHour.toDate() );\r\n\r\n    const [ formValues, setFormValues ] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    const [ titleValid, setTitleValid ] = useState( true );\r\n\r\n    // Vamos a estar pendientes de cambios en activeEvent\r\n\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n\r\n    useEffect( () => {\r\n\r\n        // console.log( 'activeEvent ha cambiado', activeEvent );\r\n\r\n        if ( activeEvent ) {\r\n\r\n            setFormValues( activeEvent );\r\n\r\n        } else {\r\n\r\n            setFormValues( initEvent );\r\n\r\n        }\r\n\r\n    }, [ activeEvent ] ); // Ponemos como dependencia activeEvent para escuchar cambios en Ã©l\r\n\r\n    // Necesitamos useDispatch para despachar Acciones\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleCloseModal = () => {\r\n\r\n        console.log( 'Closing modal' );\r\n\r\n        // setModalIsOpen( false );\r\n\r\n        dispatch( uiCloseModalStoreAction() );\r\n\r\n        // Limpiamos los campos de la modal\r\n\r\n        setFormValues( initEvent );\r\n\r\n        // Borramos el activeEvent\r\n\r\n        dispatch( eventClearActiveStoreAction() );\r\n\r\n    };\r\n\r\n    const handleDateStartChange = ( e ) => {\r\n\r\n        // console.log( e );\r\n\r\n        setDateStart( e );\r\n\r\n        setFormValues( {\r\n            ...formValues,\r\n            start: e\r\n        } );\r\n\r\n    };\r\n\r\n    const handleDateEndChange = ( e ) => {\r\n\r\n        // console.log( e );\r\n\r\n        setDateEnd( e );\r\n\r\n        setFormValues( {\r\n            ...formValues,\r\n            end: e\r\n        } );\r\n\r\n    };\r\n\r\n    const handleInputChange = ( { target } ) => {\r\n\r\n        setFormValues( {\r\n            ...formValues,\r\n            [target.name]: target.value // computamos el nombre de la propiedad con llaves cuadradas\r\n        } );\r\n\r\n        if ( title.trim().length < 2 ) {\r\n\r\n            return setTitleValid( false ); // se puede poner el return despuÃ©s\r\n\r\n        }\r\n\r\n        return setTitleValid( true );\r\n\r\n    };\r\n\r\n    const handleSubmit = ( e ) => {\r\n\r\n        e.preventDefault();\r\n\r\n        // console.log( formValues );\r\n\r\n        const momentStart = moment( start );\r\n\r\n        const momentEnd = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n\r\n            console.log( 'Fecha fin debe ser mayor a fecha de inicio' );\r\n\r\n            Swal.fire( 'Error', 'Fecha fin debe ser mayor a fecha de inicio', 'error' );\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        if ( title.trim().length < 2 ) {\r\n\r\n            return setTitleValid( false ); // se puede poner el return despuÃ©s\r\n\r\n        }\r\n\r\n\r\n        // Si tenemos un activeEvent es que estamos editando y podemos hacer el update\r\n\r\n        if ( activeEvent ) {\r\n\r\n            console.log( 'activeEvent', formValues );\r\n\r\n            dispatch( eventStartUpdateEventAction( formValues ) );\r\n\r\n        } else {\r\n\r\n            /* dispatch( eventAddNewEventStoreAction( {\r\n                ...formValues,\r\n                id: new Date().getTime(), // De forma temporal hasta que tengamos bbdd\r\n                user: {\r\n                    _id: '123',\r\n                    name: 'Erik'\r\n                }\r\n            } ) ); */\r\n\r\n            console.log( 'CalendarModal eventStartAddNewEventAction', formValues );\r\n\r\n            dispatch( eventStartAddNewEventAction( formValues ) );\r\n\r\n        }\r\n\r\n\r\n\r\n        setTitleValid( true );\r\n\r\n        handleCloseModal();\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n\r\n                // isOpen={modalIsOpen}\r\n                isOpen={modalIsOpen}\r\n\r\n                // onAfterOpen={afterOpenModal}\r\n                onRequestClose={handleCloseModal}\r\n                style={customStyles}\r\n                className=\"modal\"\r\n                overlayClassName=\"modal-fondo\"\r\n                closeTimeoutMS={200}\r\n                ariaHideApp={!process.env.NODE_ENV === 'test'}\r\n            >\r\n                <h1> {( activeEvent ) ? 'Editar evento' : 'Nuevo evento'} </h1>\r\n                <hr />\r\n                <form className=\"container\" onSubmit={handleSubmit}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora inicio</label>\r\n                        <DateTimePicker name=\"startDate\" className=\"form-control\" onChange={handleDateStartChange} value={moment( start ).toDate()} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora fin</label>\r\n                        <DateTimePicker name=\"endDate\" className=\"form-control\" minDate={dateStart} onChange={handleDateEndChange} value={moment( end ).toDate()} />\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo y notas</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                            placeholder=\"TÃ­tulo del evento\"\r\n                            autoComplete=\"off\"\r\n                            value={title}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripciÃ³n corta</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea\r\n                            type=\"text\"\r\n                            name=\"notes\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            value={notes}\r\n                            onChange={handleInputChange}\r\n                        ></textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">InformaciÃ³n adicional</small>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n\r\n};\r\n","I:\\Ficheros\\REACT\\07-calendar-app\\src\\store\\store.js",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\reducers\\rootReducer.js",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\reducers\\uiReducer.js",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\types\\types.js",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\actions\\uiActions.js",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\reducers\\calendarReducer.js",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\actions\\calendarActions.js",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\components\\ui\\AddNewFab.jsx",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\components\\ui\\DeleteFab.jsx",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\reducers\\authReducer.js",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\hooks\\useForm.js",["108"],"import { useState } from \"react\";\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n  const [ formValues, setFormValues ] = useState( initialState );\r\n\r\n  const reset = ( newFormState = initialState ) => {\r\n\r\n    setFormValues( newFormState );\r\n\r\n  };\r\n\r\n  const handleInputChange = ( { target } ) => {\r\n\r\n    // console.log( target );\r\n\r\n    // target.name es el atributo name del input, asÃ­ podemos reutilizar la misma funciÃ³n para varios inputs\r\n\r\n    setFormValues( {...formValues, [ target.name ]: target.value } );\r\n\r\n  };\r\n\r\n  // Podemos retornar un arreglo, un objeto, los valores...\r\n\r\n  return [ formValues, handleInputChange, reset ];\r\n\r\n};\r\n","I:\\Ficheros\\REACT\\07-calendar-app\\src\\actions\\authActions.js",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\helpers\\fetchHelper.js",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\routers\\PrivateRoute.jsx",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\routers\\PublicRoute.jsx",[],"I:\\Ficheros\\REACT\\07-calendar-app\\src\\helpers\\adjustEventsDates.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":57,"column":13,"nodeType":"115","messageId":"116","endLine":57,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":19,"column":20,"nodeType":"119","messageId":"120","endLine":19,"endColumn":21,"fix":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'dateEnd' is assigned a value but never used.","Identifier","unusedVar","object-curly-spacing","A space is required after '{'.","ObjectExpression","requireSpaceAfter",{"range":"124","text":"125"},"no-global-assign","no-unsafe-negation",[477,477]," "]